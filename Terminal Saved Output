Last login: Wed Mar 10 19:22:20 on ttys001
elsamouwes@Elsas-MacBook-Pro AnotherOne % git status
fatal: not a git repository (or any of the parent directories): .git
elsamouwes@Elsas-MacBook-Pro AnotherOne % git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /Users/elsamouwes/Documents/Development/AnotherOne/.git/
elsamouwes@Elsas-MacBook-Pro AnotherOne % git remote add origin https://github.com/Pauwblauw/AnotherOne.git
elsamouwes@Elsas-MacBook-Pro AnotherOne % git remote
origin
elsamouwes@Elsas-MacBook-Pro AnotherOne % git pull -u origin
error: unknown switch `u'
usage: git pull [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --recurse-submodules[=<on-demand>]
                          control for recursive fetching of submodules

Options related to merging
    -r, --rebase[=(false|true|merges|preserve|interactive)]
                          incorporate changes by rebasing rather than merging
    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --signoff[=...]       add a Signed-off-by trailer
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    --edit                edit message before committing
    --cleanup <mode>      how to strip spaces and #comments from message
    --ff                  allow fast-forward
    --ff-only             abort if fast-forward is not possible
    --verify-signatures   verify that the named commit has a valid GPG signature
    --autostash           automatically stash/stash pop before and after
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --allow-unrelated-histories
                          allow merging unrelated histories

Options related to fetching
    --all                 fetch from all remotes
    -a, --append          append to .git/FETCH_HEAD instead of overwriting
    --upload-pack <path>  path to upload pack on remote end
    -f, --force           force overwrite of local branch
    -t, --tags            fetch all tags and associated objects
    -p, --prune           prune remote-tracking branches no longer on remote
    -j, --jobs[=<n>]      number of submodules pulled in parallel
    --dry-run             dry run
    -k, --keep            keep downloaded pack
    --depth <depth>       deepen history of shallow clone
    --shallow-since <time>
                          deepen history of shallow repository based on time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --deepen <n>          deepen history of shallow clone
    --unshallow           convert to a complete repository
    --update-shallow      accept refs that update .git/shallow
    --refmap <refmap>     specify fetch refmap
    -o, --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --negotiation-tip <revision>
                          report that we have only objects reachable from this object
    --show-forced-updates
                          check for forced-updates on all updated branches
    --set-upstream        set upstream for git pull/fetch

elsamouwes@Elsas-MacBook-Pro AnotherOne % git checkout -b main
Switched to a new branch 'main'
elsamouwes@Elsas-MacBook-Pro AnotherOne % git branch
elsamouwes@Elsas-MacBook-Pro AnotherOne % git status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	index.html
	main.js
	styles.css

nothing added to commit but untracked files present (use "git add" to track)
elsamouwes@Elsas-MacBook-Pro AnotherOne % git add .
elsamouwes@Elsas-MacBook-Pro AnotherOne % git status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   index.html
	new file:   main.js
	new file:   styles.css

elsamouwes@Elsas-MacBook-Pro AnotherOne % git commit -m "bug fixes"
[main (root-commit) 279f9a9] bug fixes
 3 files changed, 104 insertions(+)
 create mode 100644 index.html
 create mode 100644 main.js
 create mode 100644 styles.css
elsamouwes@Elsas-MacBook-Pro AnotherOne % git push -u origin origin/main
error: src refspec origin/main does not match any
error: failed to push some refs to 'https://github.com/Pauwblauw/AnotherOne.git'
elsamouwes@Elsas-MacBook-Pro AnotherOne % git push -u origin main
To https://github.com/Pauwblauw/AnotherOne.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Pauwblauw/AnotherOne.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
elsamouwes@Elsas-MacBook-Pro AnotherOne % git push -u origin main
To https://github.com/Pauwblauw/AnotherOne.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Pauwblauw/AnotherOne.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
elsamouwes@Elsas-MacBook-Pro AnotherOne % git push -u origin main --force
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 1.46 KiB | 1.46 MiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Pauwblauw/AnotherOne.git
 + b5340a0...279f9a9 main -> main (forced update)
Branch 'main' set up to track remote branch 'main' from 'origin'.
elsamouwes@Elsas-MacBook-Pro AnotherOne % git status                     
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   index.html
	modified:   main.js

no changes added to commit (use "git add" and/or "git commit -a")
elsamouwes@Elsas-MacBook-Pro AnotherOne % git add . 
elsamouwes@Elsas-MacBook-Pro AnotherOne % git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   index.html
	modified:   main.js

elsamouwes@Elsas-MacBook-Pro AnotherOne % git commit -m "update, updated btns, updated functions(deleteCheck&completeCheck), removed todoDiv, introduced newTodo to CreateTodo."
[main edfe3a6] update, updated btns, updated functions(deleteCheck&completeCheck), removed todoDiv, introduced newTodo to CreateTodo.
 2 files changed, 24 insertions(+), 28 deletions(-)
elsamouwes@Elsas-MacBook-Pro AnotherOne % git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 761 bytes | 761.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Pauwblauw/AnotherOne.git
   279f9a9..edfe3a6  main -> main
elsamouwes@Elsas-MacBook-Pro AnotherOne % 
